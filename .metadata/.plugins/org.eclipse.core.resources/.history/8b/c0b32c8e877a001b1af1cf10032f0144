import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.*;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

import java.util.Arrays;;

public class SudokuGui{
	static int N = 9;
	private JFrame frame= new JFrame("Sudoku Solver");
	private JTextField textfield[][]= new JTextField[N][N];
	private GridPanel gridPanel= new GridPanel(new GridLayout(9,9,1,1));
	
	
	int[][] sudoku = new int[N][N];
	SudokuGui(){
		for(int x=0;x<N;x++) {
			for(int y=0;y<N;y++) {
				textfield[x][y]=new JTextField();
				textfield[x][y].setForeground(Color.RED);
				gridPanel.add(textfield[x][y]);
			}
		}
	}
	
	public void clearGrid() {
		for(int x=0;x<N;x++) {
			for(int y=0;y<N;y++) {
				textfield[x][y].setText("");
				textfield[x][y].setForeground(Color.RED);
			}
		}
	}
	
	public boolean checkText(){
		for(int x=0;x<N;x++){
			for(int y=0;y<N;y++) {
				if(!textfield[x][y].getText().equals("")){
					int digit = Integer.parseInt(textfield[x][y].getText());
					if(digit<=0 || digit>=10) {
						return false;
					}
				}
			}
		}
		return true;
	}
	
	
	
	public void createGui() {
		JPanel mainPanel = new JPanel(new GridBagLayout());
		GridBagConstraints gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.weighty=1;
		gridBagConstraints.weightx=1;
		gridBagConstraints.anchor=GridBagConstraints.NORTH;
		
		JLabel topLabel = new JLabel("Sudoku Solver",JLabel.CENTER);
		topLabel.setOpaque(true);
		topLabel.setBackground(Color.BLACK);
		topLabel.setForeground(Color.WHITE);
		topLabel.setFont(new Font("Helvetica",Font.PLAIN,20));
		
		gridBagConstraints.gridx=0;
		gridBagConstraints.gridy=0;
		gridBagConstraints.gridwidth=2;
		gridBagConstraints.weighty=0.05;
		gridBagConstraints.fill=GridBagConstraints.BOTH;
		mainPanel.add(topLabel,gridBagConstraints);
		
		gridBagConstraints.gridx=0;
		gridBagConstraints.gridy=0;
		gridBagConstraints.gridwidth=2;
		gridBagConstraints.weighty=1;
		gridBagConstraints.fill=GridBagConstraints.BOTH;
		gridBagConstraints.anchor=GridBagConstraints.NORTH;
		mainPanel.add(gridPanel,gridBagConstraints);
		
		gridBagConstraints.anchor=GridBagConstraints.SOUTH;
		gridBagConstraints.weighty=0.1;
		
		JButton exampleButton = new JButton("Generate Example");
		gridBagConstraints.gridx=0;
		gridBagConstraints.gridy=2;
		gridBagConstraints.gridwidth=1;
		gridBagConstraints.anchor=gridBagConstraints.SOUTH;
		gridBagConstraints.ipadx=40;
		mainPanel.add(exampleButton,gridBagConstraints);
		
		JButton clearButton = new JButton("Clear");
		gridBagConstraints.gridx=1;
		gridBagConstraints.gridy=2;
		gridBagConstraints.gridwidth=1;
		gridBagConstraints.ipadx=0;
		mainPanel.add(clearButton,gridBagConstraints);
		
		JButton solveButton = new JButton("Solve");
		gridBagConstraints.gridx=0;
		gridBagConstraints.gridy=3;
		gridBagConstraints.gridwidth=2;
		gridBagConstraints.ipadx=0;
		mainPanel.add(solveButton,gridBagConstraints);
		
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(300,300);
		frame.getContentPane().add(mainPanel);
		frame.setLocationRelativeTo(null);
		frame.setMinimumSize(new Dimension(300,300));
		frame.setVisible(true);
	}
	
	public class GridPanel extends JPanel{
		GridPanel(GridLayout layout){
			super(layout);
		}
		
		public void paintComponent(Graphics g) {
			g.fillRect(getWidth()/3-1, 0, 3, getHeight());
			g.fillRect(2*getWidth()/3-1, 0, 3, getHeight());
			g.fillRect(0, getHeight()/3-1, getWidth(), 3);
			g.fillRect(0, 2*getHeight()/3-1, getWidth(), 3);
		}
	}
	
	public static void main(String args[]) {
		SudokuGui gui = new SudokuGui();
		gui.createGui();
	}
	
}
